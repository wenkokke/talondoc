[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "talondoc"
version = "0.1.1"
description = "A Sphinx extension for Talon user directories."
license = "MIT"
authors = ["Wen Kokke <wenkokke@users.noreply.github.com>"]
readme = "README.md"
documentation = "https://wenkokke.github.io/talondoc/"
repository = "https://github.com/wenkokke/talondoc"
keywords = ["talon", "sphinx"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Topic :: Software Development :: Compilers",
]

[tool.poetry.dependencies]
python = "^3.9"
awesome-progress-bar = "^1.7.2"
docstring_parser = ">=0.14.1,<0.16.0"
Jinja2 = "^3.1.2"
bumpver = { version = "*", optional = true }
Sphinx = "^5.1.1"
sphinx-bootstrap-theme = { version = "^0.8.1", optional = true }
talonfmt = "^1.7.4"
setuptools = "*"
tree_sitter_talon = ">=1001.2,<1003.0"
pywin32 = { version = "*", markers = "sys_platform == 'win32'" }

[tool.poetry.extras]
test = ["bumpver"]
docs = ["sphinx_bootstrap_theme"]

[tool.poetry.group.dev.dependencies]
types-docutils = "^0.19.0"
mypy = "^0.971"
tox = "^3.25.1"
black = "^22.8.0"
isort = "^5.10.1"
flake8 = "^5.0.4"
bumpver = "*"

[tool.poetry.scripts]
talondoc = "talondoc:cli"

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = 3.9
namespace_packages = true
explicit_package_bases = true
ignore_missing_imports = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
enable_assertion_pass_hook = true
filterwarnings = ["ignore::DeprecationWarning:.*:"]
minversion = "6.0"
testpaths = ["tests"]

[tool.bumpver]
current_version = "0.1.1"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "Bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
  '^current_version = "{version}"$',
  '^version = "{version}"$',
]
"example/docs/conf.py" = ['^release = "{version}"$']
"talondoc/__init__.py" = ['^__version__: str = "{version}"$']

[tool.tox]
legacy_tox_ini = """
[tox]
requires =
  tox-poetry
envlist = py39,py310
isolated_build = True

[gh-actions]
python =
  3.9: py39
  3.10: py310

[testenv]
extras =
  test
commands =
  bumpver update --patch --dry --no-fetch
"""
